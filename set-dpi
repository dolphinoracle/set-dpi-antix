#!/bin/bash

#set dpi and restart desktop session


# translations stuff
TEXTDOMAINDIR=/usr/share/locale 
TEXTDOMAIN=set-dpi

APPLY=$"Apply"
CLOSE=$"Close"
TITLE=$"Set DPI"
LABEL1=$"DPI: "
CURRENT=$"Current"
MESSAGE=$"!!!Added by set-dpi"

#initialize selection dialog
get_selections()
{
#get predefined Xft.dpi value from existing ~/Xresources file
DPI=$(xrdb -query |grep dpi|cut -f2)

#if Xft.dpi setting doesn't exist in ~/Xresources, then guess dpi from X 
if [ "$DPI" = "" ]; then
DPI=$(xdpyinfo |grep dots|rev|cut -d ' ' -f4|rev|cut -d 'x' -f1)
fi

#set up selection gui
# dpi selections are multiples of 96 (1, 1.25, 1.5. 1.75, 2)
selections=$(yad --form --title="$TITLE" --num-output --center --window-icon=video-display --button="$APPLY"!emblem-default!:0 --button="$CLOSE"!process-stop!:1\
	--field="":LBL ""\
	--field="$LABEL1":CB "$DPI ($CURRENT)!96!120!144!168!192!")
}

actions()
{

#capture the exit code from the selection dialog
status2=$?

#echo $status2

#decide what to do, based on exit code
case $status2 in

	0) adjust_settings
		   ;;
	1) quit
		   ;;
esac
}

adjust_settings()
{
#dialog will give index number of selected value
INDEX=$(echo $selections|cut -d '|' -f2)
echo $INDEX

#set DPI variable depending on selected index value
case $INDEX in

	1) DPI="$DPI"
		   ;;
	2) DPI="96"
		   ;;
	3) DPI="120"
		   ;;
	4) DPI="144"
		   ;;
	5) DPI="168"
			;;
	6) DPI="192"
		   ;;
esac

#make changes to Xresources file
echo $DPI
FILE="/home/$USER/.Xresources"
EX_SETTING=$(grep Xft.dpi $FILE)

#if existing setting is not present, write one into ~/.Xresources
if [ "$EX_SETTING" = "" ]; then
	echo " " >>$FILE
	echo $MESSAGE>>$FILE
	echo "Xft.dpi:	" $DPI>>$FILE
	else
	#if existing setting is present, change it
	sed -i s/"Xft.dpi:.*"/"Xft.dpi: $DPI"/ $FILE
fi

#replace old Xresources file with current version
xrdb $FILE

#scale conky to width for new dpi (modified live-init code from BitJam)
scale_conky

#give all edits a chance to catch up before proceeding
sleep 1

#restart desktop-session which will also restart conky
/usr/local/lib/desktop-session/desktop-session-restart &

#let things settle down before bringing back the selection dialog
sleep 1
actionstatus=0
}

quit()
{
	actionstatus=1
}

scale_conky() {
#    local dpi=${1%.*}  user=$2  home=$3
#    local file=/$home/.conkyrc  def_width=180  def_gheight=30
local def_width=180  def_gheight=30
local conkyfile=$HOME/.conkyrc
local dpi=$DPI
    [ "$dpi" ] || return
    test -w $conkyfile || return
    head $conkyfile | grep -iq "^#[[:space:]]*Standard[[:space:]]*antiX[[:space:]].conkyrc" || return

    local width=$(($dpi * $def_width / 96 ))
    # Don't make conky smaller than the default size
    if [ $width -lt $def_width ]; then
        dpi=96
        width=$def_width
    fi
    echo "Setting Conky width to $width"
    local gwidth=$((width - 10))
    local gheight=$((2 * dpi * $def_gheight / 96 - $def_gheight))

    bash -c "sed -i -r -e 's/^\s*(maximum_width\s+).*/\1$width/' \
        -e 's/(graph\s+([a-z0-9]+\s+)?)[0-9]+\s*,\s*[0-9]+/\1$gheight,$gwidth/' $conkyfile"
}

##start gui and run actions
## this is actually gets things started.  everything up to now is definition of functions and variables

# set initial status
status=0

while [ $status = "0" ]; do

	#start the parent dialog
	get_selections
	
	#once selection is made, use action function to decide what to do
	actions

	#app status is the same as whatever the last actionstatus is.  If 0, the while loop starts everything over
	status=$actionstatus
	
done
